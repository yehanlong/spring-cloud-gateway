spring:
  application:
    name: gateway-service
  cloud:
    nacos:
      discovery:
        # nacos 网关地址
        server-addr: 127.0.0.1:8848
    gateway:
      routes:
      # 目前每个服务的swagger从配置中获取 所以这里必须配上对应的服务
      - id: cloud-user
        uri: lb://cloud-user
        predicates:
        - Path=/cloud-user/**
        filters:
        - StripPrefix=1
      discovery:
        locator:
          # 表示注册中心生效 可以通过注册中心服务名进行路由转发
          enabled: true
          lower-case-service-id: true
      default-filters:
      # redis限流 ， filter名称必须是RequestRateLimiter
      - name: RequestRateLimiter
        args:
          # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
          key-resolver: '#{@requestUriKeyResolver}'
          # 每秒最大访问次数 允许用户每秒处理多少个请求
          redis-rate-limiter.replenishRate: 10
          # 令牌桶最大容量 允许在一秒钟内完成的最大请求数
          redis-rate-limiter.burstCapacity: 20
      #        - name: Hystrix
      #          args:
      #            name: fallbackcmd
      #            # 熔断器也需要配置路由
      #            fallbackUri: forward:/fallback
#      - name: Retry
#        args:
#          # 重试支持的请求方式
#          methods: GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS, TRACE
#          # 重试次数
#          retries: 3
#          statuses: BAD_GATEWAY
#        # 文件上传支持最大的大小
#      - name: RequestSize
#        args:
#          maxSize: 20000000
#      globalcors:
#        cors-configurations:
#          '[/**]':
#            allowedOrigins: "*"
#            allowedMethods:
#            - HEAD
#            - PATCH
#            - TRACE
#            - OPTIONS
#            - GET
#            - POST
#            - PUT
#            - DELETE

server:
  port: 18089

